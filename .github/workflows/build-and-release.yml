name: Build and Release

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"
          check-latest: true

      - name: Get version
        id: get_version
        run: |
          echo "VERSION=$(date +'v%Y.%m.%d-%H%M')" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: go mod tidy

      - name: Build for Linux
        run: |
          GOOS=linux GOARCH=amd64 go build -o wifi-linux-amd64 -ldflags="-s -w" .
          GOOS=linux GOARCH=arm64 go build -o wifi-linux-arm64 -ldflags="-s -w" .
          GOOS=linux GOARCH=arm go build -o wifi-linux-arm -ldflags="-s -w" .

      - name: Archive binaries
        run: |
          mkdir -p releases
          zip -j releases/wifi-linux-amd64.zip wifi-linux-amd64
          zip -j releases/wifi-linux-arm64.zip wifi-linux-arm64
          zip -j releases/wifi-linux-arm.zip wifi-linux-arm

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            Automated release built on ${{ github.event.after }}

            ## Binaries
            - Linux (AMD64): wifi-linux-amd64.zip
            - Linux (ARM64): wifi-linux-arm64.zip
            - Linux (ARM): wifi-linux-arm.zip
          files: |
            releases/wifi-linux-amd64.zip
            releases/wifi-linux-arm64.zip
            releases/wifi-linux-arm.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
